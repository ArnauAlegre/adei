abline( v=res.mout$cutoff, lwd=2, col="red")
llmout <- which( ( res.mout$md > res.mout$cutoff ) & (res.mout$rd > res.mout$cutoff) )
llmout
df$mout <- 0
df$mout[ llmout ] <- 1
df$mout <- factor( df$mout, labels = c("MvOut.No","MvOut.Yes"))
res.mout$cutoff
vars_con <- c("mileage", "tax", "mpg", "years_after_sell", "inconsistencies")
vars_dis <- c("transmission", "fuelType", "engineSize", "manufacturer")
vars_res <- c("price", "Audi")
res.pca<-PCA(df[,vars_con], ind.sup = llmout)
summary(res.pca)
par(mfrow=c(1,1))
llvout<-which(df$mout=="MvOut.Yes");length(llvout) #Multivariate outliers
vars_dis <- c("model","transmission","fuelType","engineSize","manufacturer","f.price","f.tax","f.mileage","f.mpg","f.year")
summary( df[-llvout,c("f.price","Audi",vars_dis,"price") ])
res.mca<-MCA(df[,c(vars_dis[c(2,5:10)])])
summary(res.mca,nbelements=50, nbind=0)
fviz_mca_var(res.mca, col.var="contrib",
gradient.cols =rainbow(7) ,
repel = TRUE, # avoid text overlapping (slow)
ggtheme = theme_minimal()
)
fviz_mca_ind(
res.mca,
geom=c("point"),
col.ind="contrib",
gradient.cols=c("darkslateblue", "red")
)
fviz_contrib(res.mca, choice = "var", axes = 1:2)+
theme(text = element_text(size = 7.5),
axis.title = element_text(size = 5),
axis.text = element_text(size = 5)
)
# Individual Representation
plot.MCA(res.mca,choix=c("ind"),cex=0.8)
plot.MCA(res.mca,choix=c("ind"),invisible=c("ind"),cex=0.8)
# Representation of categories
plot.MCA(res.mca,choix=c("ind"),invisible=c("ind"),axes=c(1,2), graph.type = "classic", cex = 0.5)
# Representation of categories
lines(res.mca$var$coord[1:3,1],res.mca$var$coord[1:3,2],lwd=1,col="black") # Transmission
lines(res.mca$quali.sup$coord[1:4,1],res.mca$quali.sup$coord[1:4,2],lwd=2,col="darkgreen")
fviz_mca_var(res.mca, col.var="contrib",repel=TRUE,labelsize = 2)+
scale_color_gradient2(low="green", mid="blue",
high="red", midpoint=0.75)+theme_bw()
fviz_mca_biplot(res.mca, invisible="ind",axes=1:2,repel=T,labelsize = 2)+theme_bw()
mean(res.mca$eig[,1]) #All dimensions which eigenvalue is higher than the mean or 80% of explained variance - depending on the criteria which is used
res.mca<-MCA(df[,c(vars_dis[c(2:3,5:10)],"price", "inconsistencies", "Audi")], quali.sup=c(11),quanti.sup=c(9:10), ind.sup=llvout)
fviz_mca_var(res.mca, col.var="contrib",
gradient.cols =rainbow(7) ,
repel = TRUE, # avoid text overlapping (slow)
ggtheme = theme_minimal()
)
fviz_mca_var(res.mca, col.var="contrib",
gradient.cols =rainbow(7) ,
repel = TRUE, # avoid text overlapping (slow)
ggtheme = theme_minimal()
)
res.mca<-MCA(df[,c(vars_dis[c(2,5:10)])])
summary( df[-llvout,c("f.price","Audi",vars_dis,"price") ])
fviz_mca_var(res.mca, col.var="contrib",
gradient.cols =rainbow(7) ,
repel = TRUE, # avoid text overlapping (slow)
ggtheme = theme_minimal()
)
res.mca<-MCA(df[,c(vars_dis[c(2:3,5:10)],"price", "inconsistencies", "Audi")], quali.sup=c(11),quanti.sup=c(9:10), ind.sup=llvout)
fviz_mca_var(res.mca, col.var="contrib",
gradient.cols =rainbow(7) ,
repel = TRUE, # avoid text overlapping (slow)
ggtheme = theme_minimal()
)
res.mca<-MCA(df[,c(vars_dis[c(2:3,5:10)],"price", "inconsistencies", "Audi")], quali.sup=c(11),quanti.sup=c(9:10), ind.sup=llvout)
?MCA
mean(res.mca$eig[,1])
head(get_eigenvalue(res.mca), 10)
###
### Clustering the individuals
### Before, you have to perform a MCA with the number of axes
### that you have decided to take into account (indicated through ncp=)
res.mca<-MCA(df[,c(vars_dis[c(2:3,5:10)],"price", "inconsistencies", "Audi")], quali.sup=c(11),quanti.sup=c(9:10), ind.sup=llvout, ncp=9)
### Clustering the individuals
### Before, you have to perform a MCA with the number of axes
### that you have decided to take into account (indicated through ncp=)
res.mca<-MCA(df[,c(vars_dis[c(2:3,5:10)],"price", "inconsistencies", "Audi")], quali.sup=c(11),quanti.sup=c(9:10), ind.sup=llvout, ncp=9)
res.hcmc<-HCPC(res.mca,nb.clust=-1,order=TRUE)
names(res.hcmc)
names(res.hcmc$call$t)
res.hcmc$call$t$within[1:15]
(res.hcmc$call$t$within[1]-res.hcmc$call$t$within[1:10])/res.hcmc$call$t$within[1]
res.mca<-MCA(df[,c(vars_dis[c(2:3,5:10)],"price", "inconsistencies", "Audi")], quali.sup=c(11),quanti.sup=c(9:10), ind.sup=llvout)
res.hcmc<-HCPC(res.mca,nb.clust=-1,order=TRUE)
names(res.hcmc)
names(res.hcmc$call$t)
res.hcmc$call$t$within[1:15]
(res.hcmc$call$t$within[1]-res.hcmc$call$t$within[1:10])/res.hcmc$call$t$within[1]
res.hcmc<-HCPC(res.mca,nb.clust=6,order=TRUE)
df$claHCMC<-6
df[row.names(res.hcmc$data.clust),"claHCMC"]<-res.hcmc$data.clust$clust
df$claHCMC<-factor(df$claHCMC)
summary(res.hcmc$data.clust$clust)
table(df$claHCMC)
df$claHCMC<-7
df[row.names(res.hcmc$data.clust),"claHCMC"]<-res.hcmc$data.clust$clust
df$claHCMC<-factor(df$claHCMC)
summary(res.hcmc$data.clust$clust)
table(df$claHCMC)
### Interpret clustering results
summary(res.hcmc$data.clust$clust)
barplot(table(df$claHCMC),col="darkslateblue",border="darkslateblue",main="[HCPC]#observations/cluster")
# Dendrogram
fviz_dend(res.hcmc, show_labels = FALSE)
# Dendrogram
fviz_cluster(res.hcmc, geom = "point", main = "Factor map")
fviz_mca_ind(res.mca,
label = "none", invisible=c("ind.sup"),# hide individual labels
habillage = "claHCMC", # color by groups
addEllipses = TRUE, ellipse.type = "confidence",
ggtheme = theme_bw())
res.hcmc$desc.var$test.chi2
res.hcmc$desc.var$category
res.hcmc$desc.var$quanti.var
res.hcmc$desc.var$quanti
res.hcmc$desc.ind$para
fviz_screeplot(
res.pca,
addlabels=TRUE,
ylim=c(0,50),
barfill="darkslateblue",
barcolor="darkslateblue",
linecolor = "skyblue1"
)
vars_con <- c("mileage", "tax", "mpg", "years_after_sell", "inconsistencies")
vars_dis <- c("transmission", "fuelType", "engineSize", "manufacturer")
vars_res <- c("price", "Audi")
res.pca<-PCA(df[,vars_con], ind.sup = llmout)
summary(res.pca)
fviz_screeplot(
res.pca,
addlabels=TRUE,
ylim=c(0,50),
barfill="darkslateblue",
barcolor="darkslateblue",
linecolor = "skyblue1"
)
res.dimdes <- dimdesc( res.pca, axes = 1:3, proba = 0.01)
res.dimdes$Dim.1
res.dimdes$Dim.2
res.pca<-PCA(df[,vars_con], ind.sup = llmout)
#We perform a PCA using multivariate outliers as supplementary observations
fviz_pca_ind(res.pca, col.ind="contrib", geom = "point") +
scale_color_gradient2(low="darkslateblue", mid="white",
high="red", midpoint=0.40)
rang<-order(res.pca$ind$coord[,1])
contrib.extremes<-c(row.names(df)[rang[1]], row.names(df)[rang[length(rang)]])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:19]
df[which(row.names(df) %in% row.names(df)[rang[1]]),1:19]
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:19]
list(names=contrib.extremes)
row.names(df)[rang[1]]
row.names(df)[rang[length(rang)]]
summary(df[which(row.names(df) %in% row.names(df)[rang[]]),1:19])
row.names(df)[rang[]]
list(names=contrib.extremes)
row.names(df)[list(names=contrib.extremes)]
summary(df[which(row.names(df) %in% list(names=contrib.extremes)),1:19])
summary(df[list(names=contrib.extremes),1:19])
contrib.extremes
summary(df[contrib.extremes,1:19])
rang
summary(df[rang[1:10]])
summary(df[rang[1:10],1:19])
summary(df)
rang<-order(res.pca$ind$coord[,2])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
summary(df[rang[1:10],1:19])
res.pca$ind$coord[,2]
rang
res.pca$ind$coord[,2][3327]
res.pca$ind$coord[,2][3326]
contrib.extremes
rang<-order(res.pca$ind$coord[,1])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
summary(df[contrib.extremes],1:19])
summary(df[contrib.extremes,1:19])
summary(df)
df[contrib.extremes[1],1:19]
df[contrib.extremes[19],1:19]
df[contrib.extremes[21],1:19]
contrib.extremes
df[contrib.extremes[length(contrib.extremes)],1:19]
res.pca$ind$coord[,1][contrib.extremes[1]]
res.pca$ind$coord[,1][length(contrib.extremes)]
#most contributive observation in positive 1st dimension
df[contrib.extremes[length(contrib.extremes)],1:19]
df[contrib.extremes[1],1:19]
res.pca$ind$coord[,1][length(contrib.extremes)]
res.pca$ind$coord[,1][contrib.extremes[1]]
res.pca$ind$coord[,1][length(contrib.extremes)]
#most contributive observation in positive 1st dimension
df[contrib.extremes[length(contrib.extremes)],1:19]
df[21]
df[21,]
res.pca$ind$coord[,1][contrib.extremes[length(contrib.extremes)]]
contrib.extremes
row.names(df)[rang[(length(rang)-10):length(rang)]]
rang[length(rang)]
rang<-order(res.pca$ind$coord[,1])
rang[length(rang)]
res.pca$ind$coord[,1]
#most contributive observation in positive 1st dimension
df[rang[length(rang)],1:19]
res.pca$ind$coord[,1][rang[length(rang)]]
rang[length(rang)]
rang[length(rang)]
res.pca$ind$coord[,1][rang[length(rang)]]
res.pca$ind$coord[,1][2007]
res.pca$ind$coord[rang[length(rang)],1]
res.pca$ind$coord[rang[1],1]
res.pca$ind$coord[rang[1],1]
rang<-order(res.pca$ind$coord[,1])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
df[rang[1],1:19]
res.pca$ind$coord[rang[1],1]
#most contributive observation in negative 1st dimension
df[rang[length(rang)],1:19]
res.pca$ind$coord[rang[length(rang)],1]
res.pca$ind$coord[rang[-1],1]
rang[-1]
df[1852, 1:19]
res.pca$ind$coord[1852,1]
rang
df[which(row.names(df) %in% row.names(df)[rang[length(rang)]]), 1:19]
df[which(row.names(df) %in% row.names(df)[rang[1]]),1:19]
res.pca$ind$coord[which(rang=1852),1]
res.pca$ind$coord[rang[-1],1]
res.pca$ind$coord[rang[-1],1][1]
df[1852, 1:19]
rang<-order(res.pca$ind$coord[,2])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
df[rang[1],1:19]
res.pca$ind$coord[rang[1],1]
res.pca$ind$coord[rang[-1],1][1]
rang
res.pca$ind$coord[,2]
rang
res.pca$ind$coord[1][3327]
res.pca$ind$coord[which(res.pca$ind$coord=2549),1]
res.pca$ind$coord[which(res.pca$ind$coord==2549),1]
res.pca$ind$coord[which(res.pca$ind==2549),1]
res.pca$ind
res.pca$ind$coord[which(row.names(res.pca$ind$coord)==2549),1]
df[rang[1],1:19]
rang<-order(res.pca$ind$coord[,1])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
df[rang[1],1:19]
res.pca$ind$coord[which(row.names(res.pca$ind$coord)==2549),1]
order(res.pca$ind$coord[,1])
res.pca$ind$coord[,1]
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
res.pca$ind$coord[which(row.names(res.pca$ind$coord)==955),1]
df[955,1:19]
res.pca$ind$coord[which(col.names(res.pca$ind$coord)==955),1]
#most contributive observation in positive 1st dimension
df[3327, 1:19]
df[1852, 1:19]
#most contributive observation in positive 1st dimension
df[3327, 1:19]
rang<-order(res.pca$ind$coord[,2])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
df[1285,1:19]
df[955,1:19]
#most contributive observation in positive 1st dimension
df[3327, 1:19]
rang<-order(res.pca$ind$coord[,2])
contrib.extremes<-c(row.names(df)[rang[1:10]], row.names(df)[rang[(length(rang)-10):length(rang)]])
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
df[1285,1:19]
df[1396,1:19]
list(names=contrib.extremes)
df[3327,1:19]
#most contributive observation in postitive 2nd dimension
df[1305, 1:19]
rang
res.des <- dimdesc(res.pca)
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 1,
top = 5)
res.des
res.des$Dim.1
fviz_contrib(  # contributions of variables to PC1
res.pca,
fill = "darkslateblue",
color = "darkslateblue",
choice = "var",
axes = 2,
top = 5)
res.des$Dim.2
df[1396, 1:19]
View(df)
View(df)
fviz_pca_ind(res.pca, select.ind = list(names=contrib.extremes))
res.cat$category
res.cat <- catdes(df[c(2:12, 18:20)], num.var=14, proba=0.01)
res.cat$category
res.cat$category
res.cat$category[1:4]
res.cat$category[,1:4]
res.cat$category[1,]
#filepath<-"C:/Users/TOREROS-II/Documents/GitHub/adei/adei/"
filepath <- "C:/Users/Arnau/Desktop/adei/"
df<-read.table(paste0(filepath,"/sample_5000.csv"),header=T, sep=",")[c(-1)]
# dim(df)       # Displays the sample size
# names(df)     # Displays the names of the sample variables
# summary(df)
#setwd("C:/Users/TOREROS-II/Documents/GitHub/adei/adei/deliverable2")
setwd("C:/Users/Arnau/Desktop/adei/deliverable2")
# Load Required Packages
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr", "corrplot")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
if(!is.null(dev.list())) dev.off()  # Clear plots
rm(list=ls())                       # Clean workspace
#filepath<-"C:/Users/TOREROS-II/Documents/GitHub/adei/adei/"
filepath <- "C:/Users/Arnau/Desktop/adei/"
df<-read.table(paste0(filepath,"/sample_5000.csv"),header=T, sep=",")[c(-1)]
# dim(df)       # Displays the sample size
# names(df)     # Displays the names of the sample variables
# summary(df)
calcQ <- function(x) { # Function to calculate the different quartiles
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr )
}
countNA <- function(x) { # Function to count the NA values
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i)
}
countX <- function(x,X) { # Function to count a specific number of appearences
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i)
}
#Univariate Description and Preprocessing
##Variable initialization of missings, outliers and errors for columns & rows
jmis<-rep(0,2*ncol(df))  # columns - variables
imis<-rep(0,nrow(df))  # rows - cars
mis1<-countNA(df)
#mis1$mis_ind   # Number of missings for the current set of cars (observations)
#mis1$mis_col   # Number of missings for the current set of variables
jouts<-rep(0,ncol(df))  # columns - variables
iouts<-rep(0,nrow(df))  # rows - cars
jerrs<-rep(0,ncol(df))  # columns - variables
ierrs<-rep(0,nrow(df))  # rows - cars
df$model<-factor(paste0(df$manufacturer,"-",df$model))
var_out<-calcQ(df$year)
llout<-which((df$year <= var_out$souti))
iouts[llout] <- iouts[llout]+1
jouts[which(colnames(df)=="year")]<-length(llout)
df[llout,"year"] <- NA
df$f.price<-factor(cut(df$price/1000,breaks=c(quantile(df$price/1000,seq(0,1,0.2),na.rm=TRUE)), labels=c("super cheap", "cheap", "expensive", "very expensive", "extremely expensive"),include.lowest = T ))
sel<-which(df$price <= 0)
jerrs[which(colnames(df)=="price")] <- length(sel)
df[which(df$price < 0), ] <- NA
var_out<-calcQ(df$price)
llout_price<-which((df$price > var_out$souts) | (df$price < var_out$souti ))
jouts[which(colnames(df)=="price")]<-length(llout_price)
iouts[llout_price] <- iouts[llout_price]+1
df$transmission <- factor( df$transmission )
df$transmission <- factor( df$transmission, levels = c("Manual","Semi-Auto","Automatic"),labels = paste0("f.Trans-",c("Manual","SemiAuto","Automatic")))
var_out<-calcQ(df$mileage)
llout_mil<-which((df$mileage<var_out$souti)|(df$mileage>var_out$souts))
iouts[llout_mil]<-iouts[llout_mil]+1
df[llout_mil,"mileage"] <- NA
df$fuelType <- factor(df$fuelType)
df$fuelType <- factor( df$fuelType, levels = c("Diesel","Petrol","Hybrid"), labels = paste0("f.Fuel-",c("Diesel","Petrol","Hybrid")))
var_out<-calcQ(df$tax)
llout<-which((df$tax <= var_out$souti & df$tax >= var_out$souts))
iouts[llout] <- iouts[llout]+1
jouts[which(colnames(df)=="tax")]<-length(llout)
df[llout, "tax"] <- NA
var_out<-calcQ(df$mpg)
llout_mpg<-which((df$mpg<var_out$souti)|(df$mpg>var_out$souts))
iouts[llout_mpg]<-iouts[llout_mpg]+1
jouts[which(colnames(df)=="mpg")]<-length(llout)
df[llout_mpg,"mpg"] <- NA
df$engineSize <- factor(df$engineSize)
sel<-which(df$engineSize==0)
ierrs[sel]<-ierrs[sel]+1 #Vector of errors per individual update
df[sel,"engineSize"]<-NA
library(missMDA)
vars_con<-c("year", "mileage", "tax", "mpg")
vars_res<-c("price", "Audi")
res.impca<-imputePCA(df[,vars_con],ncp=3)
df[,vars_con ]<-res.impca$completeObs
df$year<-round(df$year, digits=0)
df$mpg<-round(df$mpg, digits=2)
vars_dis<-c("model","transmission","fuelType","engineSize","manufacturer")
res.immca<-imputeMCA(df[,vars_dis],ncp=4)
df[ , vars_dis ]<-res.immca$completeObs
df$Audi<-ifelse(df$manufacturer == "Audi",1,0)
df$Audi<-factor(df$Audi,labels=c("No","Yes"))
df$years_after_sell <-  2022 - df$year
quants <- calcQ(df$tax)
df$f.tax<-factor(cut(df$tax, breaks=c(quants$min,quants$q1, quants$q2, quants$q3+10, quants$max), include.lowest=T))
df$f.tax <- paste0("f.tax-", df$f.tax)
df$f.mileage<-factor(cut(df$mileage,breaks=c(quantile(df$mileage,seq(0,1,0.25),na.rm=TRUE)),include.lowest = T ))
df$f.mileage <- paste0("f.mil-", df$f.mileage)
df$f.mpg<-factor(cut(df$mpg,breaks=c(quantile(df$mpg,seq(0,1,0.25),na.rm=TRUE)),include.lowest = T ))
df$f.mpg <- paste0("f.mpg-", df$f.mpg)
df$f.year<-factor(cut(df$year,breaks=c(quantile(df$year,seq(0,1,0.25),na.rm=TRUE)),include.lowest = T ))
df$inconsistencies <- imis+iouts+ierrs
res.mout <- Moutlier( df[ ,c(2,3,5,8)], quantile = 0.995)
par(mfrow = c(1,1))
plot( res.mout$md, res.mout$rd )
abline( h=res.mout$cutoff, lwd=2, col="red")
abline( v=res.mout$cutoff, lwd=2, col="red")
llmout <- which( ( res.mout$md > res.mout$cutoff ) & (res.mout$rd > res.mout$cutoff) )
df$mout <- 0
df$mout[ llmout ] <- 1
df$mout <- factor( df$mout, labels = c("MvOut.No","MvOut.Yes"))
vars_con <- c("mileage", "tax", "mpg", "years_after_sell", "inconsistencies")
vars_dis <- c("transmission", "fuelType", "engineSize", "manufacturer")
vars_res <- c("price", "Audi")
View(df)
View(df)
View(res.immca)
vars_con <- c("mileage", "tax", "mpg", "years_after_sell", "inconsistencies")
vars_dis <- c("transmission", "fuelType", "engineSize", "manufacturer")
vars_res <- c("price", "Audi")
rm(res.immca)
res.pca<-PCA(df[,vars_con], ind.sup = llmout)
summary(res.pca)
rm(res.pca)
rm(res.impca)
rm(res.mout)
# dim(df)       # Displays the sample size
# names(df)     # Displays the names of the sample variables
# summary(df)
save.image(file="5000cars_clean.RData")
#setwd("C:/Users/TOREROS-II/Documents/GitHub/adei/adei/deliverable2")
setwd("C:/Users/Arnau/Desktop/adei/deliverable2")
# Load Required Packages
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr", "corrplot")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
if(!is.null(dev.list())) dev.off()  # Clear plots
rm(list=ls())                       # Clean workspace
#filepath<-"C:/Users/TOREROS-II/Documents/GitHub/adei/adei/"
filepath <- "C:/Users/Arnau/Desktop/adei/deliverable2"
load(file=filepath+"5000cars_clean.RData")
# dim(df)       # Displays the sample size
# names(df)     # Displays the names of the sample variables
# summary(df)
load(paste0(filepath,"5000cars_clean.RData"))
#filepath<-"C:/Users/TOREROS-II/Documents/GitHub/adei/adei/"
filepath <- "C:/Users/Arnau/Desktop/adei/deliverable2/"
load(paste0(filepath,"5000cars_clean.RData"))
#filepath<-"C:/Users/TOREROS-II/Documents/GitHub/adei/adei/"
filepath <- "C:/Users/Arnau/Desktop/adei/deliverable3/"
load(paste0(filepath,"5000cars_clean.RData"))
# dim(df)       # Displays the sample size
# names(df)     # Displays the names of the sample variables
# summary(df)
hist(df$price,50,freq=F,col="darkslateblue",border = "darkslateblue")
hist(df$price,5,freq=F,col="darkslateblue",border = "darkslateblue")
hist(df$price,50,freq=F,col="darkslateblue",border = "darkslateblue")
hist(df$price,500,freq=F,col="darkslateblue",border = "darkslateblue")
hist(df$price,100,freq=F,col="darkslateblue",border = "darkslateblue")
mm<-mean(df$price);ss<-sd(df$target.total_amount)
curve(dnorm(x,mean=mm,sd=ss),col="red",lwd=2,lty=3, add=T)
mm<-mean(df$price);ss<-sd(df$target.total_amount)
curve(dnorm(x,mean=mm,sd=ss),col="red",lwd=2,lty=3, add=T)
mm<-mean(df$price);ss<-sd(df$price)
curve(dnorm(x,mean=mm,sd=ss),col="red",lwd=2,lty=3, add=T)
shapiro.test(df$target.total_amount)
shapiro.test(df$price)
df$price_log <- log(df$price)
View(df)
View(df)
hist(df$price_log,100,freq=F,col="darkslateblue",border = "darkslateblue")
mm<-mean(df$price_log);ss<-sd(df$price_log)
curve(dnorm(x,mean=mm,sd=ss),col="red",lwd=2,lty=3, add=T)
shapiro.test(df$price)
hist(df$price,100,freq=F,col="darkslateblue",border = "darkslateblue")
mm<-mean(df$price);ss<-sd(df$price)
curve(dnorm(x,mean=mm,sd=ss),col="red",lwd=2,lty=3, add=T)
