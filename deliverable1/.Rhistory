lambda=1/16
esp=2,22
esp=2.22
desv=0.063
p1 = 1-pexp(11,lambda)
p1
p2 = pexp(10,lambda)-pexp(4,lambda)
p2
p3 = qexp(0.75,lambda)
p3
p4 = 1/(log(0.95)/-1)
p4
p5=pnorm(2.31, esp, desv)
p5
p6=1- pnorm(2.084, esp, desv)
p6
p7=qnorm(0.073, esp, desv)
p7
clear
esp=150
desv=35
p1=1-pnorm(147, esp, desv)
p1
p2=qnorm(0.95, esp, desv)
p2
n=46
esp*n/60
desv*sqrt(n)/60
n=13
esp_5=esp*n
desv_5=desv*sqrt(n)
p5=1-pnorm(156, esp_5, desv_5)
p5
esp=156
desv=desv/sqrt(n)
p4=1-pnorm(156, esp, desv)
esp=150
p4=1-pnorm(156, esp, desv)
dades=(122
105
89
110
105
108
92
79
63
124
96)
dades=(122,105, 89, 110, 105, 108, 92, 79, 63, 124, 96)
dades=(122, 105, 89, 110, 105, 108, 92, 79, 63, 124, 96)
dades=c(122, 105, 89, 110, 105, 108, 92, 79, 63, 124, 96)
p1=mean(dades)
p1
p2=sd(dades)/sqrt(lenght(dades))
p2=sd(dades)/sqrt(length(dades))
p2
p3 = c(mean(dades) -(1.645*20)/sqrt(length(dades)), mean(dades) + (1.645*20)/sqrt(length(dades)))
p3
p3 = c(mean(dades) -(1.645*18)/sqrt(length(dades)), mean(dades) + (1.645*18)/sqrt(length(dades)))
p3
p4 = t.test(dades, conf.level=99/100)$conf.int
p4 = c(p4[1], p4[2])
p4
p4 = t.test(dades, conf.level=80/100)$conf.int
p4 = c(p4[1], p4[2])
p4
z= qnorm(1 -(1 -(95/100))/2)
p5 = ceiling(((z*18)/2.5)^2)
p5
p6=mean(dades)-qt(0.90, 8)*sd(dades)/sqrt(length(dades))
p6
p6=mean(dades)-qt(0.90, 11)*sd(dades)/sqrt(length(dades))
p6=mean(dades)-qt(0.90, 10)*sd(dades)/sqrt(length(dades))
A->c(93, 91, 64, 43, 94, 90, 71, 53, 60, 86, 87, 87, 61)
A<-c(93, 91, 64, 43, 94, 90, 71, 53, 60, 86, 87, 87, 61)
B<-c(90,36,43,93,69,112,93,81,85,92,131,92,65,52,70,104,85,60,90,80)
p1=mean(A)-mean(B)
p1
sd(A)
n1=length(A)
n2=length(B)
s2 = ( (n1 -1)*(sd(A)^2) + (n2 -1)*(sd(B)^2) ) / ( (n1 -1) + (n2 -1) )
p3 = sqrt(s2)
p3
p4 = se = sqrt(s2/n1 + s2/n2)
p4
p5 = t = (mean(A) -mean(B)) / se
p5
p6 =2 * (1 -pt(abs(t), n1 + n2 -2))
p6
alfa=1-85/100
p7 = c(p1 -qt(1 -alfa/2, n1 + n2 -2) * se, p1 + qt(1 -alfa/2, n1 + n2 -2) * se)
p7
sum(A)
sum(B)
Ref=c(52.8,53,45.1,41.3,42,53.1,30.1,53.2,48.7,47.6,43.2,25.2)
New=c(44.9,61.5,52.8,56.9,58.6,60.1,35.2,61.8,50.4,57.3,69.2,56.4)
p1=mean(New)
p1
Dif=New-Ref
Dif
p2=mean(Dif)
p2
sd(Dif)
p3=sd(Dif)
p4=sd(p2)
p4
p4=p3/sqrt(length(Dif))
p4
p5=p2/p4
p5
p6=length(Dif)-1
p6
p7 = 2 * (1 -pt(abs(p5), p6))
p7
alfa=1-99/100
p9 = c(p2 -qt(1 -alfa/2, p6) * p4, p2 + qt(1 -alfa/2, p6) * p4)
p9
Ref=c(2);New=c(12)
Ref=c(47.6,52.8,53,53.1,48.7,43.2,41.3,30.1,25.2,53.2,42,45.1);New=c(58.6,69.2,60.1,56.9,50.4,56.4,52.8,35.2,44.9,61.5,57.3,61.8)
pbinom(12, 12, 0.1)
pbinom(12, 12, 0.1)
pbinom(0,12,0.1)
pbinom(0,12,0.1)
c=1-pbinom(12,12,0.1)
c
c=1-pbinom(12,12,0.9)
c
# Load Required Packages
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
filepath<-"C:/Users/Arnau/Documents/GitHub/adei/deliverable1"
df<-read.table(paste0(filepath,"/all_data.csv"),header=T, sep=",")[c(-1)]
View(df)
View(df)
table(df$transmission)
table(df$fuelType)
set.seed(123456)
sam<-as.vector(sort(sample(1:nrow(df),5000)))
df<-df[sam,]
df$model<-factor(paste0(df$manufacturer,"-",df$model))
levels(df$model)
barplot(summary(df$model),main="Model Barplot",col = "DarkSlateBlue")
summary(df$model)
pie(summary(df$model),main="Model Barplot",col = "DarkSlateBlue")
calcQ <- function(x) { # Function to calculate the different quartiles
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr )
}
countNA <- function(x) { # Function to count the NA values
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i)
}
countX <- function(x,X) { # Function to count a specific number of appearences
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i)
}
mis1<-countNA(df)
mis1$mis_ind # Number of missings for the current set of cars (observations)
mis1$mis_col # Number of missings for the current set of variables
#levels(df$model)
summary(df$model)
boxplot(df$year, col="darkslateblue")
boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
Boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
boxplot(df$year, main="Boxplot of sold year", col="darkslateblue", hor=TRUE)
boxplot(df$year, main="Boxplot of sold year", col="darkslateblue", horizontal =TRUE)
boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
#We can see that there are outliers in the dataset, so we will treat them.
calQ(df$model)
#We can see that there are outliers in the dataset, so we will treat them.
calQ(df$year)
#We can see that there are outliers in the dataset, so we will treat them.
calQ(df)
#We can see that there are outliers in the dataset, so we will treat them.
calcQ(df$year)
#We can see that there are outliers in the dataset, so we will treat them.
summary(df$ye)
#We can see that there are outliers in the dataset, so we will treat them.
summary(df$year)
calcQ(df$year)
var_out<-calcQ(df$year)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
df[which(df$year<=var_out$souti),"year"] <- pase0(var_out$souti, " or before")
df[which(df$year<=var_out$souti),"year"] <- paste0(var_out$souti, " or before")
pie(df$year, main="Boxplot of sold year", col="darkslateblue")
df$year <- factor(df$year)
pie(df$year, main="Boxplot of sold year", col="darkslateblue")
pie(table(df$year), main="Boxplot of sold year", col="darkslateblue")
boxplot(table(df$year), main="Boxplot of sold year", col="darkslateblue")
barplot(table(df$year), main="Boxplot of sold year", col="darkslateblue")
barplot(table(df$year), main="Barplot of sold year", col="darkslateblue")
df$years_after_sell <-  2022 - df$year
df<-read.table(paste0(filepath,"/all_data.csv"),header=T, sep=",")[c(-1)]
set.seed(123456)
sam<-as.vector(sort(sample(1:nrow(df),5000)))
set.seed(123456)
sam<-as.vector(sort(sample(1:nrow(df),5000)))
Verification and storage of the sample
```{r}
head(df)
df<-df[sam,]
rownames(df) <- 1:nrow(df) #rename row id's from 1 to nrows
summary(df)
```
```
#Save the image
#{r echo = T, results = 'hide'}
#save.image("T5000_raw.RData")
```
write.csv(df,"C:/Users/Arnau/Documents/GitHub/adei/deliverable1/sample_5000.csv", row.names = TRUE, na="NA")
df<-read.table(paste0(filepath,"/sample_5000.csv"),header=T, sep=",")[c(-1)]
rm(list=ls())                       # Clean workspace
df<-read.table(paste0(filepath,"/sample_5000.csv"),header=T, sep=",")[c(-1)]
filepath<-"C:/Users/Arnau/Documents/GitHub/adei/deliverable1"
df<-read.table(paste0(filepath,"/sample_5000.csv"),header=T, sep=",")[c(-1)]
View(df)
View(df)
setwd("C:/Users/Arnau/Documents/GitHub/adei/deliverable1")
calcQ <- function(x) { # Function to calculate the different quartiles
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr )
}
countNA <- function(x) { # Function to count the NA values
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i)
}
countX <- function(x,X) { # Function to count a specific number of appearences
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i)
}
table(df$man)
df$years_after_sell <-  2022 - df$year
boxplot(df$years_after_sell, main="Boxplot of years after sell", col="darkslateblue")
#We can see that there are superior outliers in the dataset, so we will treat them.
summary(df$years_after_sell)
var_out<-calcQ(df$years_after_sell)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
#We will group all the superior outliers into one variable
df[which(df$years_after_sell<=var_out$souts),"years_after_sell"] <- paste0(var_out$souts, " or more")
View(df)
View(df)
df<-read.table(paste0(filepath,"/sample_5000.csv"),header=T, sep=",")[c(-1)]
df$years_after_sell <-  2022 - df$year
boxplot(df$years_after_sell, main="Boxplot of years after sell", col="darkslateblue")
#We can see that there are superior outliers in the dataset, so we will treat them.
summary(df$years_after_sell)
var_out<-calcQ(df$years_after_sell)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
#We will group all the superior outliers into one variable
df[which(df$years_after_sell >= var_out$souts),"years_after_sell"] <- paste0(var_out$souts, " or more")
barplot(table(df$year), main="Barplot of sold year", col="darkslateblue")
barplot(table(df$years_after_sell), main="Barplot of sold years after sell", col="darkslateblue")
barplot(table(df$years_after_sell), main="Barplot of years after sell", col="darkslateblue")
table(df$years_after_sell)
pie(table(df$years_after_sell), main="Barplot of years after sell", col="darkslateblue")
barplot
barplot(table(df$years_after_sell), main="Barplot of years after sell", col="darkslateblue")
hist(table(df$years_after_sell), main="Barplot of years after sell", col="darkslateblue")
barplot(table(df$years_after_sell), main="Barplot of years after sell", col="darkslateblue")
nrow(df)
ncol(df)
df<-read.table(paste0(filepath,"/sample_5000.csv"),header=T, sep=",")[c(-1)]
df$years_after_sell <-  2022 - df$year
var_out<-calcQ(df$years_after_sell)
boxplot(df$years_after_sell, main="Boxplot of years after sell", col="darkslateblue")
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((df$years_after_sell >= var_out$souts))
df[994]
df[[994]
fd
df[[994]]
View(df)
View(df)
df[[994]]
df[[,994]]
df[,994]
df[994,]
iouts[llout] <- iouts[llout]+1
iouts<-rep(0,nrow(df))  # rows - cars
jouts<-rep(0,ncol(df))  # columns - variables
iouts[llout] <- iouts[llout]+1
ncol(df$years_after_sell)
nrow(df$years_after_sell)
ncols(df$years_after_sell)
col(df$years_after_sell)
colnames(df$years_after_sell)
which(colnames(df)=="years_after_sell")
jouts[which(colnames(df)=="years_after_sell")]<-length(llout)
jouts
iouts
df$year <- factor(df$year)
boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
View(df)
View(df)
boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
df$year <- factor(df$year)
boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
boxplot(table(df$year), main="Boxplot of sold year", col="darkslateblue")
Boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
library(ggplot2)
Boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
setwd("C:/Users/Arnau/Documents/GitHub/adei/deliverable1")
# Load Required Packages
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","dplyr","ggmap","ggthemes","knitr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
df$year <- as.factor(df$year)
boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
df<-read.table(paste0(filepath,"/sample_5000.csv"),header=T, sep=",")[c(-1)]
boxplot(df$year, main="Boxplot of sold year", col="darkslateblue")
#df$year <- factor(df$year)
#We can see that there are outliers in the dataset, so we will treat them.
summary(df$year)
var_out<-calcQ(df$year)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
llout<-which((df$year >= var_out$souti))
iouts[llout] <- iouts[llout]+1
jouts[which(colnames(df)=="year")]<-length(llout)
jouts
llout<-which((df$year <= var_out$souti))
iouts[llout] <- iouts[llout]+1
jouts[which(colnames(df)=="year")]<-length(llout)
jouts
#We will group all the inferior outliers into one variable
df[which(df$year<=var_out$souti),"year"] <- paste0(var_out$souti, " or before")
barplot(table(df$year), main="Barplot of sold year", col="darkslateblue")
View(df)
View(df)
